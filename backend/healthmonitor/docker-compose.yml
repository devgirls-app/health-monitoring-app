# docker-compose.yml
version: '3.8' # This line is optional in modern Docker Compose

services:
  # --- ZOOKEEPER ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks: # <-- ADD THIS
      - health-network

  # --- KAFKA ---
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092
      # âœ… CORRECTED THIS LINE FOR EXTERNAL CONNECTIONS (like from IntelliJ)
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks: # <-- ADD THIS
      - health-network

  # --- POSTGRESQL ---
  postgres:
    image: postgres:14.5
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgre123
      POSTGRES_DB: healthdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: # <-- ADD THIS
      - health-network

  # --- SPRING BOOT APP ---
  app:
    build: .
    depends_on:
      postgres: # Use the more specific healthcheck condition
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8080:8080"
    # Environment variables are good, they override application.yaml
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/healthdb
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    networks:
      - health-network

networks:
  health-network:
    driver: bridge

volumes:
  postgres_data: